{
	"id": "a5f9687e1df0e2db8405884896cd6e3c",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/118.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.17;\r\n\r\n// Write a Solidity function to implement a voting system, where each address can vote only once.\r\ncontract Main {\r\n\r\n    struct Voter {\r\n        bool voted;\r\n        address delegate;\r\n    }\r\n\r\n    mapping(address => Voter) public voters;\r\n\r\n    function voting() public {\r\n        require(!voters[msg.sender].voted, \"You already give your vote.\");\r\n        voters[msg.sender].voted = true;\r\n        voters[msg.sender].delegate = msg.sender;\r\n    }\r\n\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/118.sol": {
				"Main": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "voters",
							"outputs": [
								{
									"internalType": "bool",
									"name": "voted",
									"type": "bool"
								},
								{
									"internalType": "address",
									"name": "delegate",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "voting",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/118.sol\":162:517  contract Main {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/118.sol\":162:517  contract Main {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xa3ec138d\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xfce1ccca\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/118.sol\":262:301  mapping(address => Voter) public voters */\n    tag_3:\n      tag_5\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_6\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_6:\n      tag_8\n      jump\t// in\n    tag_5:\n      mload(0x40)\n      tag_9\n      swap3\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/118.sol\":310:512  function voting() public {... */\n    tag_4:\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n      stop\n        /* \"contracts/118.sol\":262:301  mapping(address => Voter) public voters */\n    tag_8:\n      mstore(0x20, 0x00)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      swap1\n      dup1\n      0x00\n      add\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      pop\n      dup3\n      jump\t// out\n        /* \"contracts/118.sol\":310:512  function voting() public {... */\n    tag_12:\n        /* \"contracts/118.sol\":355:361  voters */\n      0x00\n        /* \"contracts/118.sol\":355:373  voters[msg.sender] */\n      dup1\n        /* \"contracts/118.sol\":362:372  msg.sender */\n      caller\n        /* \"contracts/118.sol\":355:373  voters[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/118.sol\":355:379  voters[msg.sender].voted */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/118.sol\":354:379  !voters[msg.sender].voted */\n      iszero\n        /* \"contracts/118.sol\":346:411  require(!voters[msg.sender].voted, \"You already give your vote.\") */\n      tag_14\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_15\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_14:\n        /* \"contracts/118.sol\":449:453  true */\n      0x01\n        /* \"contracts/118.sol\":422:428  voters */\n      0x00\n        /* \"contracts/118.sol\":422:440  voters[msg.sender] */\n      dup1\n        /* \"contracts/118.sol\":429:439  msg.sender */\n      caller\n        /* \"contracts/118.sol\":422:440  voters[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/118.sol\":422:446  voters[msg.sender].voted */\n      0x00\n      add\n      0x00\n        /* \"contracts/118.sol\":422:453  voters[msg.sender].voted = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/118.sol\":494:504  msg.sender */\n      caller\n        /* \"contracts/118.sol\":464:470  voters */\n      0x00\n        /* \"contracts/118.sol\":464:482  voters[msg.sender] */\n      dup1\n        /* \"contracts/118.sol\":471:481  msg.sender */\n      caller\n        /* \"contracts/118.sol\":464:482  voters[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/118.sol\":464:491  voters[msg.sender].delegate */\n      0x00\n      add\n      0x01\n        /* \"contracts/118.sol\":464:504  voters[msg.sender].delegate = msg.sender */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/118.sol\":310:512  function voting() public {... */\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_18:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_20:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_21:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_36\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_20\n      jump\t// in\n    tag_36:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_22:\n        /* \"#utility.yul\":641:665   */\n      tag_38\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_21\n      jump\t// in\n    tag_38:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_39\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_39:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_23:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_41\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_22\n      jump\t// in\n    tag_41:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1170   */\n    tag_7:\n        /* \"#utility.yul\":900:906   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":924:947   */\n      sub\n        /* \"#utility.yul\":920:952   */\n      slt\n        /* \"#utility.yul\":917:1036   */\n      iszero\n      tag_43\n      jumpi\n        /* \"#utility.yul\":955:1034   */\n      tag_44\n      tag_18\n      jump\t// in\n    tag_44:\n        /* \"#utility.yul\":917:1036   */\n    tag_43:\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1100:1153   */\n      tag_45\n        /* \"#utility.yul\":1145:1152   */\n      dup5\n        /* \"#utility.yul\":1136:1142   */\n      dup3\n        /* \"#utility.yul\":1125:1134   */\n      dup6\n        /* \"#utility.yul\":1121:1143   */\n      add\n        /* \"#utility.yul\":1100:1153   */\n      tag_23\n      jump\t// in\n    tag_45:\n        /* \"#utility.yul\":1090:1153   */\n      swap2\n      pop\n        /* \"#utility.yul\":1046:1163   */\n      pop\n        /* \"#utility.yul\":841:1170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1176:1266   */\n    tag_24:\n        /* \"#utility.yul\":1210:1217   */\n      0x00\n        /* \"#utility.yul\":1253:1258   */\n      dup2\n        /* \"#utility.yul\":1246:1259   */\n      iszero\n        /* \"#utility.yul\":1239:1260   */\n      iszero\n        /* \"#utility.yul\":1228:1260   */\n      swap1\n      pop\n        /* \"#utility.yul\":1176:1266   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1272:1381   */\n    tag_25:\n        /* \"#utility.yul\":1353:1374   */\n      tag_48\n        /* \"#utility.yul\":1368:1373   */\n      dup2\n        /* \"#utility.yul\":1353:1374   */\n      tag_24\n      jump\t// in\n    tag_48:\n        /* \"#utility.yul\":1348:1351   */\n      dup3\n        /* \"#utility.yul\":1341:1375   */\n      mstore\n        /* \"#utility.yul\":1272:1381   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1387:1505   */\n    tag_26:\n        /* \"#utility.yul\":1474:1498   */\n      tag_50\n        /* \"#utility.yul\":1492:1497   */\n      dup2\n        /* \"#utility.yul\":1474:1498   */\n      tag_21\n      jump\t// in\n    tag_50:\n        /* \"#utility.yul\":1469:1472   */\n      dup3\n        /* \"#utility.yul\":1462:1499   */\n      mstore\n        /* \"#utility.yul\":1387:1505   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1511:1831   */\n    tag_10:\n        /* \"#utility.yul\":1626:1630   */\n      0x00\n        /* \"#utility.yul\":1664:1666   */\n      0x40\n        /* \"#utility.yul\":1653:1662   */\n      dup3\n        /* \"#utility.yul\":1649:1667   */\n      add\n        /* \"#utility.yul\":1641:1667   */\n      swap1\n      pop\n        /* \"#utility.yul\":1677:1742   */\n      tag_52\n        /* \"#utility.yul\":1739:1740   */\n      0x00\n        /* \"#utility.yul\":1728:1737   */\n      dup4\n        /* \"#utility.yul\":1724:1741   */\n      add\n        /* \"#utility.yul\":1715:1721   */\n      dup6\n        /* \"#utility.yul\":1677:1742   */\n      tag_25\n      jump\t// in\n    tag_52:\n        /* \"#utility.yul\":1752:1824   */\n      tag_53\n        /* \"#utility.yul\":1820:1822   */\n      0x20\n        /* \"#utility.yul\":1809:1818   */\n      dup4\n        /* \"#utility.yul\":1805:1823   */\n      add\n        /* \"#utility.yul\":1796:1802   */\n      dup5\n        /* \"#utility.yul\":1752:1824   */\n      tag_26\n      jump\t// in\n    tag_53:\n        /* \"#utility.yul\":1511:1831   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1837:2006   */\n    tag_27:\n        /* \"#utility.yul\":1921:1932   */\n      0x00\n        /* \"#utility.yul\":1955:1961   */\n      dup3\n        /* \"#utility.yul\":1950:1953   */\n      dup3\n        /* \"#utility.yul\":1943:1962   */\n      mstore\n        /* \"#utility.yul\":1995:1999   */\n      0x20\n        /* \"#utility.yul\":1990:1993   */\n      dup3\n        /* \"#utility.yul\":1986:2000   */\n      add\n        /* \"#utility.yul\":1971:2000   */\n      swap1\n      pop\n        /* \"#utility.yul\":1837:2006   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2012:2189   */\n    tag_28:\n        /* \"#utility.yul\":2152:2181   */\n      0x596f7520616c7265616479206769766520796f757220766f74652e0000000000\n        /* \"#utility.yul\":2148:2149   */\n      0x00\n        /* \"#utility.yul\":2140:2146   */\n      dup3\n        /* \"#utility.yul\":2136:2150   */\n      add\n        /* \"#utility.yul\":2129:2182   */\n      mstore\n        /* \"#utility.yul\":2012:2189   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2195:2561   */\n    tag_29:\n        /* \"#utility.yul\":2337:2340   */\n      0x00\n        /* \"#utility.yul\":2358:2425   */\n      tag_57\n        /* \"#utility.yul\":2422:2424   */\n      0x1b\n        /* \"#utility.yul\":2417:2420   */\n      dup4\n        /* \"#utility.yul\":2358:2425   */\n      tag_27\n      jump\t// in\n    tag_57:\n        /* \"#utility.yul\":2351:2425   */\n      swap2\n      pop\n        /* \"#utility.yul\":2434:2527   */\n      tag_58\n        /* \"#utility.yul\":2523:2526   */\n      dup3\n        /* \"#utility.yul\":2434:2527   */\n      tag_28\n      jump\t// in\n    tag_58:\n        /* \"#utility.yul\":2552:2554   */\n      0x20\n        /* \"#utility.yul\":2547:2550   */\n      dup3\n        /* \"#utility.yul\":2543:2555   */\n      add\n        /* \"#utility.yul\":2536:2555   */\n      swap1\n      pop\n        /* \"#utility.yul\":2195:2561   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2567:2986   */\n    tag_16:\n        /* \"#utility.yul\":2733:2737   */\n      0x00\n        /* \"#utility.yul\":2771:2773   */\n      0x20\n        /* \"#utility.yul\":2760:2769   */\n      dup3\n        /* \"#utility.yul\":2756:2774   */\n      add\n        /* \"#utility.yul\":2748:2774   */\n      swap1\n      pop\n        /* \"#utility.yul\":2820:2829   */\n      dup2\n        /* \"#utility.yul\":2814:2818   */\n      dup2\n        /* \"#utility.yul\":2810:2830   */\n      sub\n        /* \"#utility.yul\":2806:2807   */\n      0x00\n        /* \"#utility.yul\":2795:2804   */\n      dup4\n        /* \"#utility.yul\":2791:2808   */\n      add\n        /* \"#utility.yul\":2784:2831   */\n      mstore\n        /* \"#utility.yul\":2848:2979   */\n      tag_60\n        /* \"#utility.yul\":2974:2978   */\n      dup2\n        /* \"#utility.yul\":2848:2979   */\n      tag_29\n      jump\t// in\n    tag_60:\n        /* \"#utility.yul\":2840:2979   */\n      swap1\n      pop\n        /* \"#utility.yul\":2567:2986   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220c12d1528e1ec52d7d745a60520e8bd53f88dda0981701549475907692b3da1ad64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506103c8806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063a3ec138d1461003b578063fce1ccca1461006c575b600080fd5b61005560048036038101906100509190610295565b610076565b6040516100639291906102ec565b60405180910390f35b6100746100c7565b005b60006020528060005260406000206000915090508060000160009054906101000a900460ff16908060000160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff1615610156576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161014d90610372565b60405180910390fd5b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff021916908315150217905550336000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061026282610237565b9050919050565b61027281610257565b811461027d57600080fd5b50565b60008135905061028f81610269565b92915050565b6000602082840312156102ab576102aa610232565b5b60006102b984828501610280565b91505092915050565b60008115159050919050565b6102d7816102c2565b82525050565b6102e681610257565b82525050565b600060408201905061030160008301856102ce565b61030e60208301846102dd565b9392505050565b600082825260208201905092915050565b7f596f7520616c7265616479206769766520796f757220766f74652e0000000000600082015250565b600061035c601b83610315565b915061036782610326565b602082019050919050565b6000602082019050818103600083015261038b8161034f565b905091905056fea2646970667358221220c12d1528e1ec52d7d745a60520e8bd53f88dda0981701549475907692b3da1ad64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C8 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA3EC138D EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xFCE1CCCA EQ PUSH2 0x6C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x55 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x295 JUMP JUMPDEST PUSH2 0x76 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x63 SWAP3 SWAP2 SWAP1 PUSH2 0x2EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x74 PUSH2 0xC7 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x0 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x156 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14D SWAP1 PUSH2 0x372 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLER PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x262 DUP3 PUSH2 0x237 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x272 DUP2 PUSH2 0x257 JUMP JUMPDEST DUP2 EQ PUSH2 0x27D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x28F DUP2 PUSH2 0x269 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2AB JUMPI PUSH2 0x2AA PUSH2 0x232 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2B9 DUP5 DUP3 DUP6 ADD PUSH2 0x280 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2D7 DUP2 PUSH2 0x2C2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2E6 DUP2 PUSH2 0x257 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x301 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2CE JUMP JUMPDEST PUSH2 0x30E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2DD JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x596F7520616C7265616479206769766520796F757220766F74652E0000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35C PUSH1 0x1B DUP4 PUSH2 0x315 JUMP JUMPDEST SWAP2 POP PUSH2 0x367 DUP3 PUSH2 0x326 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x38B DUP2 PUSH2 0x34F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC1 0x2D ISZERO 0x28 0xE1 0xEC MSTORE 0xD7 0xD7 GASLIMIT 0xA6 SDIV KECCAK256 0xE8 0xBD MSTORE8 0xF8 DUP14 0xDA MULMOD DUP2 PUSH17 0x1549475907692B3DA1AD64736F6C634300 ADDMOD GT STOP CALLER ",
							"sourceMap": "162:355:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@voters_11": {
									"entryPoint": 118,
									"id": 11,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@voting_42": {
									"entryPoint": 199,
									"id": 42,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 640,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 661,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 733,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 718,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_8ea56086717afd6ea1b18d7576ee6cf24d00b09f0e7961cf1a2ad8411bd3c7d2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 847,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool_t_address__to_t_bool_t_address__fromStack_reversed": {
									"entryPoint": 748,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8ea56086717afd6ea1b18d7576ee6cf24d00b09f0e7961cf1a2ad8411bd3c7d2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 882,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 789,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 599,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 706,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 567,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 562,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_8ea56086717afd6ea1b18d7576ee6cf24d00b09f0e7961cf1a2ad8411bd3c7d2": {
									"entryPoint": 806,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 617,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2989:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:1",
														"type": ""
													}
												],
												"src": "334:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:1",
														"type": ""
													}
												],
												"src": "466:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:1"
															},
															"nodeType": "YulIf",
															"src": "621:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:1",
														"type": ""
													}
												],
												"src": "568:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "748:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "758:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "796:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "796:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "726:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "734:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "742:5:1",
														"type": ""
													}
												],
												"src": "696:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "907:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "953:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "955:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "955:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "955:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "924:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "949:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "920:32:1"
															},
															"nodeType": "YulIf",
															"src": "917:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "1046:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1061:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1075:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1065:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1090:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1125:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1136:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1121:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1145:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1100:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1100:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1090:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "877:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "888:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "900:6:1",
														"type": ""
													}
												],
												"src": "841:329:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1218:48:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1228:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1253:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1246:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1246:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1239:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1239:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1228:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1200:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1210:7:1",
														"type": ""
													}
												],
												"src": "1176:90:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1331:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1348:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1368:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "1353:14:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1353:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1341:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1341:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1341:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1319:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1326:3:1",
														"type": ""
													}
												],
												"src": "1272:109:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1452:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1469:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1492:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1474:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1474:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1462:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1462:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1462:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1440:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1447:3:1",
														"type": ""
													}
												],
												"src": "1387:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1631:200:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1641:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1653:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1664:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1649:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1649:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1641:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1715:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1728:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1739:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1724:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1724:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1677:37:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1677:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1677:65:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "1796:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1809:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1820:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1805:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1805:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1752:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1752:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1752:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool_t_address__to_t_bool_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1595:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1607:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1615:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1626:4:1",
														"type": ""
													}
												],
												"src": "1511:320:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1933:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1950:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1955:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1943:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1943:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1943:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1971:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1990:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1995:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1986:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1986:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "1971:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1905:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1910:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "1921:11:1",
														"type": ""
													}
												],
												"src": "1837:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2118:71:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2140:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2148:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2136:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2136:14:1"
																	},
																	{
																		"hexValue": "596f7520616c7265616479206769766520796f757220766f74652e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2152:29:1",
																		"type": "",
																		"value": "You already give your vote."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2129:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2129:53:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2129:53:1"
														}
													]
												},
												"name": "store_literal_in_memory_8ea56086717afd6ea1b18d7576ee6cf24d00b09f0e7961cf1a2ad8411bd3c7d2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2110:6:1",
														"type": ""
													}
												],
												"src": "2012:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2341:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2351:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2417:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2422:2:1",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2358:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2358:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2351:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2523:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8ea56086717afd6ea1b18d7576ee6cf24d00b09f0e7961cf1a2ad8411bd3c7d2",
																	"nodeType": "YulIdentifier",
																	"src": "2434:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2434:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2434:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2536:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2547:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2552:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2543:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2543:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2536:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8ea56086717afd6ea1b18d7576ee6cf24d00b09f0e7961cf1a2ad8411bd3c7d2_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2329:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2337:3:1",
														"type": ""
													}
												],
												"src": "2195:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2738:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2748:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2760:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2771:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2756:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2756:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2748:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2795:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2806:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2791:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2791:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2814:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2820:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2810:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2810:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2784:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2784:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2784:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2840:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2974:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8ea56086717afd6ea1b18d7576ee6cf24d00b09f0e7961cf1a2ad8411bd3c7d2_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2848:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2848:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2840:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8ea56086717afd6ea1b18d7576ee6cf24d00b09f0e7961cf1a2ad8411bd3c7d2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2718:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2733:4:1",
														"type": ""
													}
												],
												"src": "2567:419:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_bool_t_address__to_t_bool_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_8ea56086717afd6ea1b18d7576ee6cf24d00b09f0e7961cf1a2ad8411bd3c7d2(memPtr) {\n\n        mstore(add(memPtr, 0), \"You already give your vote.\")\n\n    }\n\n    function abi_encode_t_stringliteral_8ea56086717afd6ea1b18d7576ee6cf24d00b09f0e7961cf1a2ad8411bd3c7d2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_8ea56086717afd6ea1b18d7576ee6cf24d00b09f0e7961cf1a2ad8411bd3c7d2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8ea56086717afd6ea1b18d7576ee6cf24d00b09f0e7961cf1a2ad8411bd3c7d2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8ea56086717afd6ea1b18d7576ee6cf24d00b09f0e7961cf1a2ad8411bd3c7d2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100365760003560e01c8063a3ec138d1461003b578063fce1ccca1461006c575b600080fd5b61005560048036038101906100509190610295565b610076565b6040516100639291906102ec565b60405180910390f35b6100746100c7565b005b60006020528060005260406000206000915090508060000160009054906101000a900460ff16908060000160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff1615610156576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161014d90610372565b60405180910390fd5b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff021916908315150217905550336000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061026282610237565b9050919050565b61027281610257565b811461027d57600080fd5b50565b60008135905061028f81610269565b92915050565b6000602082840312156102ab576102aa610232565b5b60006102b984828501610280565b91505092915050565b60008115159050919050565b6102d7816102c2565b82525050565b6102e681610257565b82525050565b600060408201905061030160008301856102ce565b61030e60208301846102dd565b9392505050565b600082825260208201905092915050565b7f596f7520616c7265616479206769766520796f757220766f74652e0000000000600082015250565b600061035c601b83610315565b915061036782610326565b602082019050919050565b6000602082019050818103600083015261038b8161034f565b905091905056fea2646970667358221220c12d1528e1ec52d7d745a60520e8bd53f88dda0981701549475907692b3da1ad64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA3EC138D EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xFCE1CCCA EQ PUSH2 0x6C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x55 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x295 JUMP JUMPDEST PUSH2 0x76 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x63 SWAP3 SWAP2 SWAP1 PUSH2 0x2EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x74 PUSH2 0xC7 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x0 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x156 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14D SWAP1 PUSH2 0x372 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLER PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x262 DUP3 PUSH2 0x237 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x272 DUP2 PUSH2 0x257 JUMP JUMPDEST DUP2 EQ PUSH2 0x27D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x28F DUP2 PUSH2 0x269 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2AB JUMPI PUSH2 0x2AA PUSH2 0x232 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2B9 DUP5 DUP3 DUP6 ADD PUSH2 0x280 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2D7 DUP2 PUSH2 0x2C2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2E6 DUP2 PUSH2 0x257 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x301 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2CE JUMP JUMPDEST PUSH2 0x30E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2DD JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x596F7520616C7265616479206769766520796F757220766F74652E0000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35C PUSH1 0x1B DUP4 PUSH2 0x315 JUMP JUMPDEST SWAP2 POP PUSH2 0x367 DUP3 PUSH2 0x326 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x38B DUP2 PUSH2 0x34F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC1 0x2D ISZERO 0x28 0xE1 0xEC MSTORE 0xD7 0xD7 GASLIMIT 0xA6 SDIV KECCAK256 0xE8 0xBD MSTORE8 0xF8 DUP14 0xDA MULMOD DUP2 PUSH17 0x1549475907692B3DA1AD64736F6C634300 ADDMOD GT STOP CALLER ",
							"sourceMap": "162:355:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;262:39;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;310:202;;;:::i;:::-;;262:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;310:202::-;355:6;:18;362:10;355:18;;;;;;;;;;;;;;;:24;;;;;;;;;;;;354:25;346:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;449:4;422:6;:18;429:10;422:18;;;;;;;;;;;;;;;:24;;;:31;;;;;;;;;;;;;;;;;;494:10;464:6;:18;471:10;464:18;;;;;;;;;;;;;;;:27;;;:40;;;;;;;;;;;;;;;;;;310:202::o;88:117:1:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:90::-;1210:7;1253:5;1246:13;1239:21;1228:32;;1176:90;;;:::o;1272:109::-;1353:21;1368:5;1353:21;:::i;:::-;1348:3;1341:34;1272:109;;:::o;1387:118::-;1474:24;1492:5;1474:24;:::i;:::-;1469:3;1462:37;1387:118;;:::o;1511:320::-;1626:4;1664:2;1653:9;1649:18;1641:26;;1677:65;1739:1;1728:9;1724:17;1715:6;1677:65;:::i;:::-;1752:72;1820:2;1809:9;1805:18;1796:6;1752:72;:::i;:::-;1511:320;;;;;:::o;1837:169::-;1921:11;1955:6;1950:3;1943:19;1995:4;1990:3;1986:14;1971:29;;1837:169;;;;:::o;2012:177::-;2152:29;2148:1;2140:6;2136:14;2129:53;2012:177;:::o;2195:366::-;2337:3;2358:67;2422:2;2417:3;2358:67;:::i;:::-;2351:74;;2434:93;2523:3;2434:93;:::i;:::-;2552:2;2547:3;2543:12;2536:19;;2195:366;;;:::o;2567:419::-;2733:4;2771:2;2760:9;2756:18;2748:26;;2820:9;2814:4;2810:20;2806:1;2795:9;2791:17;2784:47;2848:131;2974:4;2848:131;:::i;:::-;2840:139;;2567:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "193600",
								"executionCost": "238",
								"totalCost": "193838"
							},
							"external": {
								"voters(address)": "infinite",
								"voting()": "51168"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 162,
									"end": 517,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 162,
									"end": 517,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 162,
									"end": 517,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 162,
									"end": 517,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 162,
									"end": 517,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 162,
									"end": 517,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 162,
									"end": 517,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 162,
									"end": 517,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 162,
									"end": 517,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 162,
									"end": 517,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 162,
									"end": 517,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 162,
									"end": 517,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 162,
									"end": 517,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 162,
									"end": 517,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 162,
									"end": 517,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 162,
									"end": 517,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 162,
									"end": 517,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 162,
									"end": 517,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 162,
									"end": 517,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 162,
									"end": 517,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 162,
									"end": 517,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c12d1528e1ec52d7d745a60520e8bd53f88dda0981701549475907692b3da1ad64736f6c63430008110033",
									".code": [
										{
											"begin": 162,
											"end": 517,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 162,
											"end": 517,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 162,
											"end": 517,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 162,
											"end": 517,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 162,
											"end": 517,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 162,
											"end": 517,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 162,
											"end": 517,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 162,
											"end": 517,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 162,
											"end": 517,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 162,
											"end": 517,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 162,
											"end": 517,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 162,
											"end": 517,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 162,
											"end": 517,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 162,
											"end": 517,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 162,
											"end": 517,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 162,
											"end": 517,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 162,
											"end": 517,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 162,
											"end": 517,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 162,
											"end": 517,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 162,
											"end": 517,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 162,
											"end": 517,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 162,
											"end": 517,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 162,
											"end": 517,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 162,
											"end": 517,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 162,
											"end": 517,
											"name": "PUSH",
											"source": 0,
											"value": "A3EC138D"
										},
										{
											"begin": 162,
											"end": 517,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 162,
											"end": 517,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 162,
											"end": 517,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 162,
											"end": 517,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 162,
											"end": 517,
											"name": "PUSH",
											"source": 0,
											"value": "FCE1CCCA"
										},
										{
											"begin": 162,
											"end": 517,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 162,
											"end": 517,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 162,
											"end": 517,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 162,
											"end": 517,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 162,
											"end": 517,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 162,
											"end": 517,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 162,
											"end": 517,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 162,
											"end": 517,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 262,
											"end": 301,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 262,
											"end": 301,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 262,
											"end": 301,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 262,
											"end": 301,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 262,
											"end": 301,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 262,
											"end": 301,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 262,
											"end": 301,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 262,
											"end": 301,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 262,
											"end": 301,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 262,
											"end": 301,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 262,
											"end": 301,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 262,
											"end": 301,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 262,
											"end": 301,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 262,
											"end": 301,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 262,
											"end": 301,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 262,
											"end": 301,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 262,
											"end": 301,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 262,
											"end": 301,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 262,
											"end": 301,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 262,
											"end": 301,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 262,
											"end": 301,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 262,
											"end": 301,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 262,
											"end": 301,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 262,
											"end": 301,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 262,
											"end": 301,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 262,
											"end": 301,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 262,
											"end": 301,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 262,
											"end": 301,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 262,
											"end": 301,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 262,
											"end": 301,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 262,
											"end": 301,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 262,
											"end": 301,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 262,
											"end": 301,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 262,
											"end": 301,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 262,
											"end": 301,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 262,
											"end": 301,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 262,
											"end": 301,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 262,
											"end": 301,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 310,
											"end": 512,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 310,
											"end": 512,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 310,
											"end": 512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 310,
											"end": 512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 310,
											"end": 512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 310,
											"end": 512,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 310,
											"end": 512,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 310,
											"end": 512,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 262,
											"end": 301,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 262,
											"end": 301,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 262,
											"end": 301,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 262,
											"end": 301,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 262,
											"end": 301,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 262,
											"end": 301,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 262,
											"end": 301,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 262,
											"end": 301,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 262,
											"end": 301,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 262,
											"end": 301,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 262,
											"end": 301,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 262,
											"end": 301,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 262,
											"end": 301,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 262,
											"end": 301,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 262,
											"end": 301,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 262,
											"end": 301,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 262,
											"end": 301,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 262,
											"end": 301,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 262,
											"end": 301,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 262,
											"end": 301,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 262,
											"end": 301,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 262,
											"end": 301,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 262,
											"end": 301,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 262,
											"end": 301,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 262,
											"end": 301,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 262,
											"end": 301,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 262,
											"end": 301,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 262,
											"end": 301,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 262,
											"end": 301,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 262,
											"end": 301,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 262,
											"end": 301,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 262,
											"end": 301,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 262,
											"end": 301,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 262,
											"end": 301,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 262,
											"end": 301,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 262,
											"end": 301,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 262,
											"end": 301,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 262,
											"end": 301,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 262,
											"end": 301,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 262,
											"end": 301,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 262,
											"end": 301,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 262,
											"end": 301,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 262,
											"end": 301,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 262,
											"end": 301,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 262,
											"end": 301,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 262,
											"end": 301,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 262,
											"end": 301,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 310,
											"end": 512,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 310,
											"end": 512,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 355,
											"end": 361,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 355,
											"end": 373,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 362,
											"end": 372,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 355,
											"end": 373,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 355,
											"end": 373,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 355,
											"end": 373,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 355,
											"end": 373,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 355,
											"end": 373,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 355,
											"end": 373,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 355,
											"end": 373,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 355,
											"end": 373,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 355,
											"end": 373,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 355,
											"end": 373,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 355,
											"end": 373,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 355,
											"end": 373,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 355,
											"end": 373,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 355,
											"end": 373,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 355,
											"end": 373,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 355,
											"end": 379,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 355,
											"end": 379,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 355,
											"end": 379,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 355,
											"end": 379,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 355,
											"end": 379,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 355,
											"end": 379,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 355,
											"end": 379,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 355,
											"end": 379,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 355,
											"end": 379,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 355,
											"end": 379,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 355,
											"end": 379,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 355,
											"end": 379,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 354,
											"end": 379,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 346,
											"end": 411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 346,
											"end": 411,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 346,
											"end": 411,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 346,
											"end": 411,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 346,
											"end": 411,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 346,
											"end": 411,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 346,
											"end": 411,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 346,
											"end": 411,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 346,
											"end": 411,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 346,
											"end": 411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 346,
											"end": 411,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 346,
											"end": 411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 346,
											"end": 411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 346,
											"end": 411,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 346,
											"end": 411,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 346,
											"end": 411,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 346,
											"end": 411,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 346,
											"end": 411,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 346,
											"end": 411,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 346,
											"end": 411,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 346,
											"end": 411,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 346,
											"end": 411,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 346,
											"end": 411,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 346,
											"end": 411,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 449,
											"end": 453,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 422,
											"end": 428,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 422,
											"end": 440,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 429,
											"end": 439,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 422,
											"end": 440,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 422,
											"end": 440,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 422,
											"end": 440,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 422,
											"end": 440,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 422,
											"end": 440,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 422,
											"end": 440,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 422,
											"end": 440,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 422,
											"end": 440,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 422,
											"end": 440,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 422,
											"end": 440,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 422,
											"end": 440,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 422,
											"end": 440,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 422,
											"end": 440,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 422,
											"end": 440,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 422,
											"end": 440,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 422,
											"end": 446,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 422,
											"end": 446,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 422,
											"end": 446,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 422,
											"end": 453,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 422,
											"end": 453,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 422,
											"end": 453,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 422,
											"end": 453,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 422,
											"end": 453,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 422,
											"end": 453,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 422,
											"end": 453,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 422,
											"end": 453,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 422,
											"end": 453,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 422,
											"end": 453,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 422,
											"end": 453,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 422,
											"end": 453,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 422,
											"end": 453,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 422,
											"end": 453,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 422,
											"end": 453,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 422,
											"end": 453,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 422,
											"end": 453,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 422,
											"end": 453,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 494,
											"end": 504,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 464,
											"end": 470,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 464,
											"end": 482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 471,
											"end": 481,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 464,
											"end": 482,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 464,
											"end": 482,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 464,
											"end": 482,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 464,
											"end": 482,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 464,
											"end": 482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 464,
											"end": 482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 464,
											"end": 482,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 464,
											"end": 482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 464,
											"end": 482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 464,
											"end": 482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 464,
											"end": 482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 464,
											"end": 482,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 464,
											"end": 482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 464,
											"end": 482,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 464,
											"end": 482,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 464,
											"end": 491,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 464,
											"end": 491,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 464,
											"end": 491,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 464,
											"end": 504,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 464,
											"end": 504,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 464,
											"end": 504,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 464,
											"end": 504,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 464,
											"end": 504,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 464,
											"end": 504,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 464,
											"end": 504,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 464,
											"end": 504,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 464,
											"end": 504,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 464,
											"end": 504,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 464,
											"end": 504,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 464,
											"end": 504,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 464,
											"end": 504,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 464,
											"end": 504,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 464,
											"end": 504,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 464,
											"end": 504,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 464,
											"end": 504,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 464,
											"end": 504,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 310,
											"end": 512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 920,
											"end": 952,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 955,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1121,
											"end": 1143,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1100,
											"end": 1153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1046,
											"end": 1163,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1210,
											"end": 1217,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1253,
											"end": 1258,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1246,
											"end": 1259,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1239,
											"end": 1260,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1228,
											"end": 1260,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1228,
											"end": 1260,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1266,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1272,
											"end": 1381,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1272,
											"end": 1381,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1368,
											"end": 1373,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1353,
											"end": 1374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1374,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1353,
											"end": 1374,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1348,
											"end": 1351,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1341,
											"end": 1375,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1272,
											"end": 1381,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1272,
											"end": 1381,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1272,
											"end": 1381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1387,
											"end": 1505,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1387,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1474,
											"end": 1498,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1492,
											"end": 1497,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1474,
											"end": 1498,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1474,
											"end": 1498,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1474,
											"end": 1498,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1474,
											"end": 1498,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1469,
											"end": 1472,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1462,
											"end": 1499,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1387,
											"end": 1505,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1387,
											"end": 1505,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1387,
											"end": 1505,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1511,
											"end": 1831,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1511,
											"end": 1831,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1626,
											"end": 1630,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1664,
											"end": 1666,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1653,
											"end": 1662,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1649,
											"end": 1667,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1641,
											"end": 1667,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1641,
											"end": 1667,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1742,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1739,
											"end": 1740,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1728,
											"end": 1737,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1724,
											"end": 1741,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1715,
											"end": 1721,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1742,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1677,
											"end": 1742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1742,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1677,
											"end": 1742,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1752,
											"end": 1824,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1820,
											"end": 1822,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1809,
											"end": 1818,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1805,
											"end": 1823,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1796,
											"end": 1802,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1752,
											"end": 1824,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1752,
											"end": 1824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1752,
											"end": 1824,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1752,
											"end": 1824,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1511,
											"end": 1831,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1511,
											"end": 1831,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1511,
											"end": 1831,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1511,
											"end": 1831,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1511,
											"end": 1831,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1511,
											"end": 1831,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1837,
											"end": 2006,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1837,
											"end": 2006,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1921,
											"end": 1932,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1955,
											"end": 1961,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1950,
											"end": 1953,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1943,
											"end": 1962,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1995,
											"end": 1999,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1990,
											"end": 1993,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1986,
											"end": 2000,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1971,
											"end": 2000,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1971,
											"end": 2000,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1837,
											"end": 2006,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1837,
											"end": 2006,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1837,
											"end": 2006,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1837,
											"end": 2006,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1837,
											"end": 2006,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2012,
											"end": 2189,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 2012,
											"end": 2189,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2152,
											"end": 2181,
											"name": "PUSH",
											"source": 1,
											"value": "596F7520616C7265616479206769766520796F757220766F74652E0000000000"
										},
										{
											"begin": 2148,
											"end": 2149,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2140,
											"end": 2146,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2136,
											"end": 2150,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2129,
											"end": 2182,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2012,
											"end": 2189,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2012,
											"end": 2189,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2195,
											"end": 2561,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 2195,
											"end": 2561,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2337,
											"end": 2340,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2358,
											"end": 2425,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 2422,
											"end": 2424,
											"name": "PUSH",
											"source": 1,
											"value": "1B"
										},
										{
											"begin": 2417,
											"end": 2420,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2358,
											"end": 2425,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 2358,
											"end": 2425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2358,
											"end": 2425,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 2358,
											"end": 2425,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2351,
											"end": 2425,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2351,
											"end": 2425,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2434,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 2523,
											"end": 2526,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2434,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 2434,
											"end": 2527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2434,
											"end": 2527,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 2434,
											"end": 2527,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2552,
											"end": 2554,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2547,
											"end": 2550,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2555,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 2555,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 2555,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2195,
											"end": 2561,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2195,
											"end": 2561,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2195,
											"end": 2561,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2195,
											"end": 2561,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2986,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2567,
											"end": 2986,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2733,
											"end": 2737,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2771,
											"end": 2773,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2760,
											"end": 2769,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2756,
											"end": 2774,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2748,
											"end": 2774,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2748,
											"end": 2774,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2829,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2814,
											"end": 2818,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2810,
											"end": 2830,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2806,
											"end": 2807,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2795,
											"end": 2804,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2791,
											"end": 2808,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2784,
											"end": 2831,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2848,
											"end": 2979,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2974,
											"end": 2978,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2848,
											"end": 2979,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 2848,
											"end": 2979,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2848,
											"end": 2979,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2848,
											"end": 2979,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2840,
											"end": 2979,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2840,
											"end": 2979,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2986,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2986,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2986,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/118.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"voters(address)": "a3ec138d",
							"voting()": "fce1ccca"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"voters\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"voted\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"voting\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/118.sol\":\"Main\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/118.sol\":{\"keccak256\":\"0x8ef17dc8381d4dd144e79f0cc7457bc96f61cde31477926695b73f4bd1568f60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ee4b7615e3ea437e869946f0300dbd269306ddbb360d88fa8b7d52f883c422f0\",\"dweb:/ipfs/QmZGfuiXFM6V7tmEWjbjYiyrQqw7tbnuCQzUPACzcvbjCY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 11,
								"contract": "contracts/118.sol:Main",
								"label": "voters",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_struct(Voter)6_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_struct(Voter)6_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct Main.Voter)",
								"numberOfBytes": "32",
								"value": "t_struct(Voter)6_storage"
							},
							"t_struct(Voter)6_storage": {
								"encoding": "inplace",
								"label": "struct Main.Voter",
								"members": [
									{
										"astId": 3,
										"contract": "contracts/118.sol:Main",
										"label": "voted",
										"offset": 0,
										"slot": "0",
										"type": "t_bool"
									},
									{
										"astId": 5,
										"contract": "contracts/118.sol:Main",
										"label": "delegate",
										"offset": 1,
										"slot": "0",
										"type": "t_address"
									}
								],
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/118.sol": {
				"ast": {
					"absolutePath": "contracts/118.sol",
					"exportedSymbols": {
						"Main": [
							43
						]
					},
					"id": 44,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "35:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Main",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 43,
							"linearizedBaseContracts": [
								43
							],
							"name": "Main",
							"nameLocation": "171:4:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Main.Voter",
									"id": 6,
									"members": [
										{
											"constant": false,
											"id": 3,
											"mutability": "mutable",
											"name": "voted",
											"nameLocation": "214:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 6,
											"src": "209:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 2,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "209:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 5,
											"mutability": "mutable",
											"name": "delegate",
											"nameLocation": "238:8:0",
											"nodeType": "VariableDeclaration",
											"scope": 6,
											"src": "230:16:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 4,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "230:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Voter",
									"nameLocation": "192:5:0",
									"nodeType": "StructDefinition",
									"scope": 43,
									"src": "185:69:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a3ec138d",
									"id": 11,
									"mutability": "mutable",
									"name": "voters",
									"nameLocation": "295:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 43,
									"src": "262:39:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$6_storage_$",
										"typeString": "mapping(address => struct Main.Voter)"
									},
									"typeName": {
										"id": 10,
										"keyType": {
											"id": 7,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "270:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "262:25:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$6_storage_$",
											"typeString": "mapping(address => struct Main.Voter)"
										},
										"valueType": {
											"id": 9,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 8,
												"name": "Voter",
												"nameLocations": [
													"281:5:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 6,
												"src": "281:5:0"
											},
											"referencedDeclaration": 6,
											"src": "281:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Voter_$6_storage_ptr",
												"typeString": "struct Main.Voter"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 41,
										"nodeType": "Block",
										"src": "335:177:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 20,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "354:25:0",
															"subExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 15,
																		"name": "voters",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 11,
																		"src": "355:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$6_storage_$",
																			"typeString": "mapping(address => struct Main.Voter storage ref)"
																		}
																	},
																	"id": 18,
																	"indexExpression": {
																		"expression": {
																			"id": 16,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "362:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 17,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "366:6:0",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "362:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "355:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Voter_$6_storage",
																		"typeString": "struct Main.Voter storage ref"
																	}
																},
																"id": 19,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "374:5:0",
																"memberName": "voted",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3,
																"src": "355:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7520616c7265616479206769766520796f757220766f74652e",
															"id": 21,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "381:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8ea56086717afd6ea1b18d7576ee6cf24d00b09f0e7961cf1a2ad8411bd3c7d2",
																"typeString": "literal_string \"You already give your vote.\""
															},
															"value": "You already give your vote."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8ea56086717afd6ea1b18d7576ee6cf24d00b09f0e7961cf1a2ad8411bd3c7d2",
																"typeString": "literal_string \"You already give your vote.\""
															}
														],
														"id": 14,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "346:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 22,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "346:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 23,
												"nodeType": "ExpressionStatement",
												"src": "346:65:0"
											},
											{
												"expression": {
													"id": 30,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 24,
																"name": "voters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 11,
																"src": "422:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$6_storage_$",
																	"typeString": "mapping(address => struct Main.Voter storage ref)"
																}
															},
															"id": 27,
															"indexExpression": {
																"expression": {
																	"id": 25,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "429:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 26,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "433:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "429:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "422:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$6_storage",
																"typeString": "struct Main.Voter storage ref"
															}
														},
														"id": 28,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "441:5:0",
														"memberName": "voted",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3,
														"src": "422:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 29,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "449:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "422:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 31,
												"nodeType": "ExpressionStatement",
												"src": "422:31:0"
											},
											{
												"expression": {
													"id": 39,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 32,
																"name": "voters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 11,
																"src": "464:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$6_storage_$",
																	"typeString": "mapping(address => struct Main.Voter storage ref)"
																}
															},
															"id": 35,
															"indexExpression": {
																"expression": {
																	"id": 33,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "471:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 34,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "475:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "471:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "464:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$6_storage",
																"typeString": "struct Main.Voter storage ref"
															}
														},
														"id": 36,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "483:8:0",
														"memberName": "delegate",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "464:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 37,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "494:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 38,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "498:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "494:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "464:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 40,
												"nodeType": "ExpressionStatement",
												"src": "464:40:0"
											}
										]
									},
									"functionSelector": "fce1ccca",
									"id": 42,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "voting",
									"nameLocation": "319:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "325:2:0"
									},
									"returnParameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "335:0:0"
									},
									"scope": 43,
									"src": "310:202:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 44,
							"src": "162:355:0",
							"usedErrors": []
						}
					],
					"src": "35:482:0"
				},
				"id": 0
			}
		}
	}
}